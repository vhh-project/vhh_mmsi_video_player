// Generated by CoffeeScript 1.10.0
(function() {
  var VhhVideoMediator;

  window.VhhVideoMediator = VhhVideoMediator = (function() {
    function VhhVideoMediator(data) {
      this.videoPlayer = data != null ? data.videoPlayer : void 0;
      this.subscribers = {
        frameUpdate: []
      };
    }

    VhhVideoMediator.prototype.getListByType = function(type) {
      switch (type) {
        case 'frameUpdate':
          return this.subscribers.frameUpdate;
        default:
          return null;
      }
    };

    VhhVideoMediator.prototype.subscribe = function(type, model) {
      var list;
      list = this.getListByType(type);
      if (list == null) {
        return false;
      }
      return list.push(model);
    };

    VhhVideoMediator.prototype.unsubscribe = function(type, model) {
      var i, index, item, len, list;
      list = this.getListByType(type);
      if (list == null) {
        return false;
      }
      for (index = i = 0, len = list.length; i < len; index = ++i) {
        item = list[index];
        if (item === model) {
          list.splice(index, 1);
          return true;
        }
      }
      return false;
    };

    VhhVideoMediator.prototype.updateFrame = function(frameNumber) {
      var i, item, len, ref, results;
      ref = this.getListByType('frameUpdate');
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        results.push(typeof item.frameUpdate === "function" ? item.frameUpdate(frameNumber) : void 0);
      }
      return results;
    };

    VhhVideoMediator.prototype.setFrame = function(frameNumber) {
      var ref;
      return (ref = this.videoPlayer) != null ? ref.setCurrentFrame(frameNumber) : void 0;
    };

    return VhhVideoMediator;

  })();

}).call(this);
